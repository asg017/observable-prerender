#!/usr/bin/env node
const { program } = require("commander");
const { load } = require("../src");

const {
  applyBrowserOptions,
  applyRedefineOptions,
  getNotebookConfig,
  runRedefines,
} = require("./utils.js");

let p = program
  .version(require("../package.json").version)
  .arguments("<notebook> [cells...]")
  .description("Open an Observable notebook.");
p = applyBrowserOptions(p);
p = applyRedefineOptions(p);
p.action(async function (argNotebook, argCells) {
  const opts = program.opts();
  const config = getNotebookConfig(opts);
  console.log(config.headless);
  config.headless = false;
  load(argNotebook, argCells, config)
    .then(async (notebook) => {
      await runRedefines(notebook, opts, true);
      console.log(`Notebook ${argNotebook} loaded.`);
      console.log(notebook.browser.wsEndpoint());
      process.on("exit", () => notebook.close());
    })
    .catch((error) => {
      console.error(`Error caught when loading ${argNotebook} with`, argCells);
      console.error(error);
    });
});

program.parse(process.argv);
